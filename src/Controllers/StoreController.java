//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : StoreController.java
//  @ Date : 14/12/2017
//  @ Author : 
//
//

package Controllers;
import Models.*;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;

public class StoreController {
	public Models.Store store;

	public StoreController(String name, String address, StoreOwner storeOwner) {
		store = new PhysicalStore(1 /* temp ID*/, name, address, storeOwner);
	}

	public StoreController(String name, StoreOwner storeOwner) {
		store = new VirtualStore(1 /* temp ID*/, name, storeOwner);
	}

	public StoreController(Store store) {
		this.store = store;
	}

	//Console Version Functions
	public static Store chooseStores() {
		Scanner sc = new Scanner(System.in);
		int i = 0;
		if(Platform.Stores.size() > 1) {
			for (Store store : Platform.Stores) {
				System.out.println(++i + ". " + store.name);
			}
			System.out.print("Choose Store: ");
			while ((i = sc.nextInt()) < 1 || i > Platform.Stores.size()) //Input-Validation
				System.out.print("Invalid Input");

			return Platform.Stores.get(i - 1);
		}
		else return null;
	}

	public StoreProduct chooseStoreProducts() {
		Scanner sc = new Scanner(System.in);
		int i = 0;
		if(store.products.size() > 0) {
			for (StoreProduct product : store.products) {
				System.out.println(product.detailsString());
			}
			System.out.print("Choose Product: ");
			while ((i = sc.nextInt()) < 1 || i > store.products.size())
				System.out.print("Invalid Input");

			return store.products.get(i - 1);
		}
		else return null;
	}

	//Print Views for Store Owners
	public StoreProduct chooseStoreProductsViews() {
		Scanner sc = new Scanner(System.in);
		int i = 0;
		List<StoreProduct> sortedProducts = new ArrayList<>(store.products);
		sortedProducts.sort(Comparator.comparingDouble(StoreProduct::getView).reversed());	//TODO Test Sorting
		if(sortedProducts.size() > 0) {
			for (StoreProduct product : store.products) {
				System.out.println(product.view + " Views | " + product.detailsString());
			}
			System.out.print("Choose Product: ");
			while ((i = sc.nextInt()) < 1 || i > store.products.size())
				System.out.print("Invalid Input");
			return store.products.get(i - 1);
		}
		else return null;
	}

}
